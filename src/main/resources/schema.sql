create table if not exists genres --*
(
    id int primary key,
    "name" varchar(100) not null
);

create table if not exists mpa --*
(
    id int primary key,
    "name" varchar(100) not null
);

create table if not exists users --*
(
    id bigint generated by default as identity primary key,
    login varchar(255) not null,
    "name" varchar(255),
    email varchar(255) not null,
    birthday date not null
);

create table if not exists friendships --*
(
    user1_id bigint,
    user2_id bigint,
    direction int not null check (((direction = 0) or (direction = '-1'::integer) or (direction = 1))),
    foreign key (user1_id) references users (id) on delete cascade,
    foreign key (user2_id) references users (id) on delete cascade,
    primary key (user1_id, user2_id)
);


create table if not exists films --*
(
    id bigint generated by default as identity primary key,
    "name" varchar(255) not null,
    description varchar(200),
    release_date date,
    duration int,
    mpa_id int,
    foreign key (mpa_id) references mpa (id) on delete cascade
);

create table if not exists likes --*
(
    film_id bigint,
    user_id bigint,
    foreign key (film_id) references films (id) on delete cascade,
    foreign key (user_id) references users (id) on delete cascade,
    primary key (film_id, user_id)
);


create table if not exists film_genre --*
(
    film_id  bigint,
    genre_id int,
    foreign key (film_id) references films (id) on delete cascade,
    foreign key (genre_id) references genres (id) on delete cascade,
    primary key (film_id, genre_id)
);

create table if not exists reviews --*
(
    id int generated by default as identity primary key,
    content varchar(1024),
    is_positive boolean not null,
    user_id bigint,
    film_id bigint,
    useful int default 0,
    foreign key (film_id) references films (id) on delete cascade,
    foreign key (user_id) references users (id) on delete cascade
);